#!/bin/bash
#    Copyright (C) 2015 Joxit
#
#    This program is free software: you can redistribute it and/or modify
#    it under the terms of the GNU General Public License as published by
#    the Free Software Foundation, either version 3 of the License, or
#    (at your option) any later version.
#
#    This program is distributed in the hope that it will be useful,
#    but WITHOUT ANY WARRANTY; without even the implied warranty of
#    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#    GNU General Public License for more details.
#
#    You should have received a copy of the GNU General Public License
#    along with this program.  If not, see <http://www.gnu.org/licenses/>.
#

function usage {
    echo "docker-clean [OPTIONS]
    OPTIONS :
        --image
            Delete all images named <none> (use docker rmi for <none> images)
        --image=IMAGE_NAME
            Delete all images named IMAGE_NAME and their tags (name must match and regex can be used)
        -f, --force
            Append -f in docker options when possible (`docker rmi -f image`for example)
        -r, --recursive
            When deleting image, remove also their containers
        -h, --help
            Display a help message, and exit.
        -v, --version
            Display version information, and exit."

    exit 0
}

for arg in "$@"
do
case "$arg" in
    --images|--images=*)
        opt_option=true
        IMAGE_NAME="${arg#*=}"
        if [ "${arg}" = "--images" ] || [ "${IMAGE_NAME}" = "" ]; then
            IMAGE_NAME="<none>"
        fi
        ;;
    -f|--force)
	opt_force=true
	DOCKER_OPTS="${DOCKER_OPTS} -f"
	;;
    -r|--recursive)
	opt_recursive=true
	;;
    -h|--help)
        usage
        ;;
    -v|--version)
	echo "$0  Copyright (C) 2015 Joxit"
	echo "This program comes with ABSOLUTELY NO WARRANTY."
	echo "This is free software, and you are welcome to redistribute it"
	echo "under certain condition."
	exit 0
	;;
esac
    shift
done
if [ "$opt_option" = true ]; then
    IMAGES=`docker images | grep "^$IMAGE_NAME " | sed 's/  */ /g' | cut -d' ' -f 3`
    if [ "${IMAGES}" != "" ]; then
	if [ "$opt_recursive" = true ]; then
	    IMAGES_DISJUNCTION=`echo ${IMAGES} | sed "s/ /|/g"`
	    while read line; do
		echo $line
		if [ "`echo $line | cut -d' ' -f 2 | grep -E ${IMAGES_DISJUNCTION}`" != "" ]; then
		    CONTAINERS="${CONTAINERS} $(echo $line | cut -d' ' -f 1)"    
		fi
	    done < <(docker ps -a | sed 's/  */ /g')
	    if [ "${CONTAINERS}" != "" ]; then
		echo "Deleting associated containers first"
		docker rm ${DOCKER_OPTS} ${CONTAINERS}
	    fi
	fi
        echo "Deleting ${IMAGE_NAME} images (all tags)"
        docker rmi ${DOCKER_OPTS} ${IMAGES}    
    else
        echo "There are no images to delete"
    fi
fi

